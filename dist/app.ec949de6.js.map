{"version":3,"sources":["node_modules/minivents/dist/minivents.commonjs.min.js","variables.js","classes.js","functions.js","app.js"],"names":["eventManager","Events","introScoreList","document","querySelector","loginClose","loginBtn","userNameInput","userPassInput","logOutBtn","loginCheckAlert","activeUserNameContainer","activeUserScoreContainer","quizContainer","quizContainerHeading","quizHeading","quizMainBox","startQuiz","quizGuessResult","quizNumberFirst","quizNumberSecond","quizGuessInput","timerBox","appPrefix","students","currentStudent","appStartData","userId","userName","userPassword","userScore","introListTemplate","quizHeadingTemplate","DBManager","db","localStorage","key","value","JSON","stringify","setItem","data","getItem","parse","removeItem","AppManager","currentStudentData","localDb","setStudentsRegister","initialData","allStudentsData","n","p","find","user","userPass","userCheck","currentStudentOldData","click","emit","Student","currentStudentDB","scorePlus","availableData","QuestionGenerator","firstNumber","secondNumber","result","rendomMultipications","firstNumer","Math","floor","random","secondNumer","firstStart","manager","scoreListSummary","reduce","carry","item","replace","innerHTML","addEventListener","event","keyCode","preventDefault","userNameValue","userPassValue","login","appReStart","introScoreData","quizHeadingResult","classList","add","remove","logOut","location","reload","timerFire","quesstionCount","generatedQuestion","newQuestion","clearInterval","timer","minute","second","setInterval","contDown","hasFocus","currentTime","QuizFinish","dbManager","currentStuendData","updatedAllUserData","map","e","message","addClass","removeClass","parseInt","target","studentLiveData","on","style","display","setTimeout"],"mappings":"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","file":"app.ec949de6.js","sourceRoot":"..","sourcesContent":["module.exports=function(n){var t={},e=[];n=n||this,n.on=function(e,r,l){return(t[e]=t[e]||[]).push([r,l]),n},n.off=function(r,l){r||(t={});for(var o=t[r]||e,u=o.length=l?o.length:0;u--;)l==o[u][0]&&o.splice(u,1);return n},n.emit=function(r){for(var l,o=t[r]||e,u=o.length>0?o.slice(0,o.length):o,i=0;l=u[i++];)l[0].apply(l[1],e.slice.call(arguments,1));return n}};","\n\n\nimport Events from 'minivents';\n\nexport let eventManager = new Events();\nexport let introScoreList = document.querySelector(\".intro-score-list\");\nexport let loginClose = document.querySelector(\".close\");\nexport let loginBtn = document.querySelector('.login-button');\nexport let userNameInput = document.querySelector('#userName');\nexport let userPassInput = document.querySelector('#userPass');\nexport let logOutBtn = document.querySelector(\".logout-btn\");\nexport let loginCheckAlert = document.querySelector(\".login-control-alert\");\nexport let activeUserNameContainer = document.querySelector(\".active-user-name\");\nexport let activeUserScoreContainer = document.querySelector(\".user-score\");\nexport let quizContainer = document.querySelector(\".quiz-container\");\nexport let quizContainerHeading = document.querySelector(\".quiz-container\");\nexport let quizHeading = document.querySelector(\".quiz-heading\");\nexport let quizMainBox = document.querySelector(\".quiz-main-box\");\nexport let startQuiz = document.querySelector(\".start-to-quiz\");\nexport let quizGuessResult = document.querySelector(\".quiz-guess-result\");\nexport let quizNumberFirst = document.querySelector(\".number-one\");\nexport let quizNumberSecond = document.querySelector(\".number-two\");\nexport let quizGuessInput = document.querySelector(\".quiz-guess\");\nexport let timerBox = document.querySelector(\"#timer-box\");\n\n\nexport const appPrefix = {\n    students: '__kerrat_students',\n    currentStudent: \"__kerrat_current_student\",\n};\n\nexport const appStartData = [\n  { userId: 1, userName: 'Mahmut', userPassword: '1234', userScore: 0 },\n  { userId: 2, userName: 'Onur', userPassword: '2468', userScore: 0 },\n  { userId: 3, userName: 'Batu', userPassword: '1357', userScore: 0 }\n];\n\n\nexport let introListTemplate = `\n<div class=\"d-flex align-items-center justify-content-between py-2 border-bottom border-gray scoreboard-list-item\">\n  <div class=\"d-flex align-items-center\">\n    <img class=\"mr-2 rounded\" src=\"img/user-__STUDENTICON__.svg\" width=\"80\" height=\"80\">\n    <div class=\"media-body mb-0 small lh-125\">\n      <div class=\"d-flex justify-content-between align-items-center w-100\">\n        <h5 class=\"text-gray-dark\">__STUDENTNAME__</h5>\n      </div>\n    </div>\n  </div>\n  <h4 class=\"user-score\">\n    <span class=\"badge badge-success\">__STUDENTSCORE__</span> <small>Puan</small>\n  </h4>\n</div>\n`;\n\nexport let quizHeadingTemplate = `\n<div class=\"d-flex align-items-center justify-content-between border-bottom border-gray\">\n  <div class=\"d-flex align-items-center\">\n    <img alt=\"32x32\" class=\"mr-2 rounded\" src=\"img/user-__STUDENTICON__.svg\" width=\"100\" height=\"100\">\n    <div class=\"media-body mb-0 small lh-125\">\n      <div class=\"d-flex justify-content-between align-items-center w-100\">\n        <h5 class=\"text-gray-dark active-user-name\">__STUDENTNAME__</h5>\n      </div>\n    </div>\n  </div>\n  <h3 class=\"user-score-box\">\n      Toplam Puanın: <span class=\"user-score\">__STUDENTSCORE__</span>  \n  </h3>\n</div>\n`;\n\n","import {eventManager, appStartData, appPrefix, loginClose} from './variables'\n\nexport class DBManager {\n  constructor() {\n    this.db = localStorage;\n  }\n\n  setItem(key, value) {\n    value = JSON.stringify(value);\n    this.db.setItem(key, value);\n  }\n\n  getItem(key) {\n    const data = this.db.getItem(key);\n    return JSON.parse(data);\n  }\n\n  removeItem(key) {\n    this.db.removeItem(key);\n  }\n\n}\n\nexport class AppManager {\n  constructor() {\n    this.currentStudentData = null;\n    this.localDb = new DBManager();\n    this.setStudentsRegister();\n  }\n\n  setStudentsRegister() {\n    let initialData = appStartData;\n    const allStudentsData = this.localDb.getItem(appPrefix.students);\n    if(allStudentsData){\n      initialData = allStudentsData;\n    }\n\n    this.localDb.setItem(appPrefix.students, initialData);\n  }\n\n  userCheck(n, p) {\n    let registerUsers = this.localDb.getItem(appPrefix.students);\n    return !!registerUsers.find(user => {\n      return user.userName === n && user.userPassword === p;\n    });\n  }\n\n  login(userName, userPass) {\n    if (this.userCheck(userName, userPass)) {\n      let allStudentsData = this.localDb.getItem(appPrefix.students);\n      let currentStudentOldData = allStudentsData.find(user => {\n        return user.userName === userName;\n      });\n      this.localDb.setItem(appPrefix.currentStudent, currentStudentOldData);\n      this.currentStudentData = this.localDb.getItem(appPrefix.currentStudent);\n      loginClose.click();\n      return;\n    }\n    eventManager.emit(\"userLoginFailed\");\n  }\n}\n\nexport class Student {\n  constructor() {\n    this.currentStudentDB = new DBManager();\n  }\n\n  studentLiveData(scorePlus) {\n    const availableData = this.currentStudentDB.getItem(appPrefix.currentStudent)\n    availableData.userScore += scorePlus;\n    this.currentStudentDB.setItem(appPrefix.currentStudent, availableData )\n  }\n\n}\n\nexport class QuestionGenerator{\n  constructor(){\n    this.firstNumber = null;\n    this.secondNumber = null;\n    this.result = null;\n    this.rendomMultipications()\n  }\n\n  rendomMultipications() {\n    const firstNumer = Math.floor(Math.random() * 9)+1;\n    const secondNumer = Math.floor(Math.random() * 9)+1;\n    const result = firstNumer*secondNumer;\n    this.firstNumber = firstNumer;\n    this.secondNumber = secondNumer;\n    this.result = result;\n  }\n\n}\n","import {\n    introListTemplate,\n    eventManager,\n    appPrefix,\n    introScoreList,\n    loginBtn,\n    loginCheckAlert,\n    logOutBtn,\n    quizGuessInput,\n    quizGuessResult,\n    quizHeading,\n    quizHeadingTemplate,\n    quizMainBox,\n    quizNumberFirst,\n    quizNumberSecond,\n    startQuiz,\n    timerBox,\n    userNameInput,\n    userPassInput,\n} from \"./variables\";\nimport {DBManager, AppManager, QuestionGenerator, Student} from './classes';\n\nfunction firstStart() {\n    const manager = new AppManager();\n    const introScoreData = manager.localDb.getItem(appPrefix.students);\n    const scoreListSummary = introScoreData.reduce((carry, item) => {\n        carry += introListTemplate\n            .replace(/__STUDENTNAME__/, item.userName)\n            .replace(/__STUDENTICON__/, item.userId)\n            .replace(/__STUDENTSCORE__/, item.userScore);\n        return carry;\n    }, '');\n    introScoreList.innerHTML = scoreListSummary;\n    userPassInput.addEventListener(\"keyup\", function (event) {\n        if (event.keyCode === 13) {\n            event.preventDefault();\n            loginBtn.click();\n        }\n    });\n    loginBtn.addEventListener('click', function () {\n        const userNameValue = userNameInput.value;\n        const userPassValue = userPassInput.value;\n        manager.login(userNameValue, userPassValue)\n        appReStart()\n    });\n}\n\nfunction appReStart() {\n    const manager = new DBManager();\n    const introScoreData = manager.getItem(appPrefix.currentStudent);\n    if (!!introScoreData) {\n        const quizHeadingResult = quizHeadingTemplate\n            .replace(/__STUDENTNAME__/, introScoreData.userName)\n            .replace(/__STUDENTSCORE__/, introScoreData.userScore)\n            .replace(/__STUDENTICON__/, introScoreData.userId)\n        quizHeading.innerHTML = quizHeadingResult;\n\n        document.querySelector(\"body\").classList.add(\"isLogin\")\n        return;\n    }\n    document.querySelector(\"body\").classList.remove(\"isLogin\")\n}\n\nfunction logOut() {\n    const removeCurrentData = new DBManager();\n    removeCurrentData.removeItem(appPrefix.currentStudent);\n    location.reload();\n}\n\nlet quesstionCount = 10;\nlet generatedQuestion = null;\n\nfunction newQuestion() {\n    appReStart()\n    clearInterval(timerFire)\n    timer(0, 10);\n    quesstionCount--;\n    generatedQuestion = new QuestionGenerator();\n    quizNumberFirst.innerHTML = generatedQuestion.firstNumber;\n    quizNumberSecond.innerHTML = generatedQuestion.secondNumber;\n}\n\nlet timerFire;\n\nfunction timer(minute, second) {\n    timerFire = setInterval(contDown, 1000);\n\n    function contDown() {\n        if (document.hasFocus()) {\n            second--;\n            let currentTime = minute + \":\" + (second < 10 ? \"0\" : \"\") + second;\n            timerBox.innerHTML = currentTime;\n            if (second === 0) {\n                if (minute > 0 && second === 0) {\n                    minute--;\n                    second = 60;\n                } else {\n                    clearInterval(timerFire);\n                    eventManager.emit(\"checkQuizStatus\");\n                }\n            }\n        }\n    }\n}\n\nfunction QuizFinish() {\n    appReStart()\n    const dbManager = new DBManager();\n    const currentStuendData = dbManager.getItem(appPrefix.currentStudent);\n    const allStudentData = dbManager.getItem(appPrefix.students)\n    const updatedAllUserData = allStudentData.map(item => {\n        if (item.userName !== currentStuendData.userName) {\n            return item;\n        }\n        item.userScore += currentStuendData.userScore;\n        return item;\n    });\n    dbManager.setItem(appPrefix.students, updatedAllUserData)\n    logOut()\n}\n\n// Events\nlogOutBtn.addEventListener(\"click\", function () {\n    logOut()\n});\n\nstartQuiz.addEventListener(\"click\", function () {\n    this.remove();\n    quizMainBox.classList.remove(\"d-none\");\n    quizMainBox.classList.add(\"d-flex\");\n    newQuestion()\n});\n\nquizGuessInput.addEventListener(\"change\", function (e) {\n    let message,\n        addClass,\n        removeClass;\n    if (parseInt(e.target.value) === parseInt(generatedQuestion.result)) {\n        message = \"Doğru\";\n        addClass = \"alert-success\";\n        removeClass = \"alert-danger\";\n        const scoreDB = new Student();\n        scoreDB.studentLiveData(10);\n    } else {\n        message = \"Yanlış\";\n        addClass = \"alert-danger\";\n        removeClass = \"alert-success\";\n    }\n    quizGuessResult.innerHTML = message;\n    quizGuessResult.classList.add(addClass);\n    quizGuessResult.classList.remove(removeClass);\n\n    e.target.value = \"\";\n    eventManager.emit(\"checkQuizStatus\");\n})\n\neventManager.on(\"checkQuizStatus\", function () {\n    quesstionCount > 0 ? newQuestion() : QuizFinish();\n})\n\neventManager.on(\"userLoginFailed\", function () {\n    loginCheckAlert.style.display = \"block\";\n    setTimeout(function () {\n        loginCheckAlert.style.display = \"none\";\n    }, 1400)\n})\n\n\nexport {firstStart, appReStart}\n","import {firstStart, appReStart} from \"./functions\";\nfirstStart();\nappReStart();\n"]}